nohup: ignoring input
Using device: cuda
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:00<00:01,  1.35it/s]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:01<00:00,  1.35it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:02<00:00,  1.39it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:02<00:00,  1.38it/s]
  0%|          | 0/50 [00:00<?, ?it/s]/home/zhiyu2/guangliang/SuperficialMoralSelfCorrection/mechanism/internalmech.py:173: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  internal_states_probing = torch.load("mistral.pt")['mlp.weight'][1]
We detected that you are passing `past_key_values` as a tuple and this is deprecated and will be removed in v4.43. Please use an appropriate `Cache` class (https://huggingface.co/docs/transformers/v4.41.3/en/internal/generation_utils#transformers.Cache)
  2%|▏         | 1/50 [00:46<38:02, 46.59s/it]  4%|▍         | 2/50 [01:35<38:29, 48.11s/it]  6%|▌         | 3/50 [02:13<34:00, 43.42s/it]  8%|▊         | 4/50 [02:56<33:03, 43.12s/it] 10%|█         | 5/50 [03:37<31:49, 42.44s/it] 12%|█▏        | 6/50 [04:15<29:57, 40.86s/it] 14%|█▍        | 7/50 [04:58<29:52, 41.68s/it] 16%|█▌        | 8/50 [05:38<28:45, 41.09s/it] 18%|█▊        | 9/50 [06:19<28:09, 41.21s/it] 20%|██        | 10/50 [07:02<27:49, 41.75s/it] 22%|██▏       | 11/50 [07:42<26:41, 41.08s/it] 24%|██▍       | 12/50 [08:26<26:35, 41.98s/it] 26%|██▌       | 13/50 [09:13<26:45, 43.39s/it] 28%|██▊       | 14/50 [09:59<26:38, 44.40s/it] 30%|███       | 15/50 [10:38<24:53, 42.67s/it] 32%|███▏      | 16/50 [11:21<24:10, 42.67s/it] 34%|███▍      | 17/50 [12:07<24:07, 43.87s/it] 36%|███▌      | 18/50 [12:48<22:48, 42.77s/it] 38%|███▊      | 19/50 [13:36<22:57, 44.44s/it] 40%|████      | 20/50 [14:13<21:06, 42.23s/it] 42%|████▏     | 21/50 [14:54<20:16, 41.94s/it] 44%|████▍     | 22/50 [15:40<20:08, 43.14s/it] 46%|████▌     | 23/50 [16:25<19:37, 43.62s/it] 48%|████▊     | 24/50 [17:10<19:06, 44.09s/it] 50%|█████     | 25/50 [17:49<17:41, 42.47s/it] 52%|█████▏    | 26/50 [18:38<17:47, 44.50s/it] 54%|█████▍    | 27/50 [19:26<17:25, 45.44s/it] 56%|█████▌    | 28/50 [20:08<16:20, 44.57s/it] 58%|█████▊    | 29/50 [20:43<14:35, 41.71s/it] 60%|██████    | 30/50 [21:26<13:59, 42.00s/it] 62%|██████▏   | 31/50 [22:06<13:09, 41.57s/it] 64%|██████▍   | 32/50 [22:47<12:20, 41.12s/it] 66%|██████▌   | 33/50 [23:34<12:11, 43.04s/it] 68%|██████▊   | 34/50 [24:12<11:05, 41.62s/it] 70%|███████   | 35/50 [24:55<10:28, 41.87s/it] 72%|███████▏  | 36/50 [25:39<09:56, 42.60s/it] 74%|███████▍  | 37/50 [26:23<09:18, 42.97s/it] 76%|███████▌  | 38/50 [27:15<09:06, 45.55s/it] 78%|███████▊  | 39/50 [27:48<07:41, 41.99s/it] 80%|████████  | 40/50 [28:36<07:16, 43.63s/it] 82%|████████▏ | 41/50 [29:17<06:25, 42.86s/it] 84%|████████▍ | 42/50 [30:05<05:56, 44.52s/it] 86%|████████▌ | 43/50 [30:48<05:08, 44.09s/it] 88%|████████▊ | 44/50 [31:26<04:12, 42.06s/it] 90%|█████████ | 45/50 [32:10<03:34, 42.91s/it] 92%|█████████▏| 46/50 [33:00<02:59, 44.77s/it] 94%|█████████▍| 47/50 [33:43<02:13, 44.34s/it] 96%|█████████▌| 48/50 [34:21<01:25, 42.55s/it] 98%|█████████▊| 49/50 [35:07<00:43, 43.40s/it] 98%|█████████▊| 49/50 [35:54<00:43, 43.96s/it]
Traceback (most recent call last):
  File "/home/zhiyu2/guangliang/SuperficialMoralSelfCorrection/mechanism/internalmech.py", line 267, in <module>
    results = parsing_intrinsic_feedback_CoT(args, tokenizer, llm, file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/guangliang/SuperficialMoralSelfCorrection/mechanism/internalmech.py", line 187, in parsing_intrinsic_feedback_CoT
    _ = llm(input_ids.input_ids)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/transformers/models/mistral/modeling_mistral.py", line 1033, in forward
    outputs = self.model(
              ^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/transformers/models/mistral/modeling_mistral.py", line 808, in forward
    layer_outputs = decoder_layer(
                    ^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/transformers/models/mistral/modeling_mistral.py", line 564, in forward
    hidden_states = self.mlp(hidden_states)
                    ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/transformers/models/mistral/modeling_mistral.py", line 156, in forward
    return self.down_proj(self.act_fn(self.gate_proj(hidden_state)) * self.up_proj(hidden_state))
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 150.00 MiB. GPU 0 has a total capacity of 44.55 GiB of which 123.44 MiB is free. Process 1159257 has 8.83 GiB memory in use. Including non-PyTorch memory, this process has 35.59 GiB memory in use. Of the allocated memory 34.10 GiB is allocated by PyTorch, and 1.18 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
Using device: cuda
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:00<00:01,  1.33it/s]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:01<00:00,  1.33it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:02<00:00,  1.37it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:02<00:00,  1.36it/s]
Traceback (most recent call last):
  File "/home/zhiyu2/guangliang/SuperficialMoralSelfCorrection/mechanism/internalmech.py", line 267, in <module>
    results = parsing_intrinsic_feedback_CoT(args, tokenizer, llm, file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/guangliang/SuperficialMoralSelfCorrection/mechanism/internalmech.py", line 144, in parsing_intrinsic_feedback_CoT
    corpus_json_list = json.load(json_reader)
                       ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/json/__init__.py", line 293, in load
    return loads(fp.read(),
           ^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
               ^^^^^^^^^^^^^^^^^^^^^^
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 30 column 48 (char 4118)
Using device: cuda
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:00<00:01,  1.29it/s]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:01<00:00,  1.31it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:02<00:00,  1.35it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:02<00:00,  1.34it/s]
  0%|          | 0/350 [00:00<?, ?it/s]/home/zhiyu2/guangliang/SuperficialMoralSelfCorrection/mechanism/internalmech.py:173: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  internal_states_probing = torch.load("mistral.pt")['mlp.weight'][1]
We detected that you are passing `past_key_values` as a tuple and this is deprecated and will be removed in v4.43. Please use an appropriate `Cache` class (https://huggingface.co/docs/transformers/v4.41.3/en/internal/generation_utils#transformers.Cache)
  0%|          | 1/350 [00:44<4:21:06, 44.89s/it]  1%|          | 2/350 [01:23<3:57:59, 41.03s/it]  1%|          | 3/350 [02:05<3:59:54, 41.48s/it]  1%|          | 4/350 [02:51<4:09:59, 43.35s/it]  1%|▏         | 5/350 [03:33<4:07:08, 42.98s/it]  2%|▏         | 6/350 [04:20<4:13:59, 44.30s/it]  2%|▏         | 7/350 [05:04<4:12:49, 44.23s/it]  2%|▏         | 8/350 [05:49<4:13:05, 44.40s/it]  3%|▎         | 9/350 [06:32<4:09:42, 43.94s/it]  3%|▎         | 10/350 [07:17<4:10:29, 44.21s/it]  3%|▎         | 11/350 [07:55<3:59:27, 42.38s/it]  3%|▎         | 12/350 [08:46<4:14:22, 45.15s/it]  4%|▎         | 13/350 [09:29<4:09:38, 44.45s/it]  4%|▍         | 14/350 [10:15<4:10:58, 44.82s/it]  4%|▍         | 15/350 [10:59<4:09:21, 44.66s/it]  5%|▍         | 16/350 [11:34<3:51:59, 41.67s/it]  5%|▍         | 17/350 [12:22<4:01:46, 43.56s/it]  5%|▌         | 18/350 [13:05<4:00:43, 43.50s/it]  5%|▌         | 19/350 [13:57<4:12:58, 45.86s/it]  6%|▌         | 20/350 [14:36<4:01:00, 43.82s/it]  6%|▌         | 21/350 [15:16<3:55:06, 42.88s/it]  6%|▋         | 22/350 [16:05<4:03:21, 44.52s/it]  7%|▋         | 23/350 [16:57<4:14:46, 46.75s/it]  7%|▋         | 24/350 [17:41<4:09:17, 45.88s/it]  7%|▋         | 25/350 [18:17<3:53:28, 43.10s/it]  7%|▋         | 26/350 [19:01<3:53:35, 43.26s/it]  8%|▊         | 27/350 [19:52<4:05:36, 45.63s/it]  8%|▊         | 28/350 [20:34<3:59:04, 44.55s/it]  8%|▊         | 29/350 [21:11<3:46:34, 42.35s/it]  9%|▊         | 30/350 [21:56<3:50:00, 43.13s/it]  9%|▉         | 31/350 [22:38<3:47:43, 42.83s/it]  9%|▉         | 32/350 [23:20<3:44:52, 42.43s/it]  9%|▉         | 33/350 [24:10<3:56:26, 44.75s/it] 10%|▉         | 34/350 [24:49<3:46:11, 42.95s/it] 10%|█         | 35/350 [25:34<3:48:29, 43.52s/it] 10%|█         | 36/350 [26:20<3:51:50, 44.30s/it] 11%|█         | 37/350 [27:09<3:58:46, 45.77s/it] 11%|█         | 38/350 [27:58<4:03:13, 46.77s/it] 11%|█         | 39/350 [28:38<3:52:10, 44.79s/it] 11%|█▏        | 40/350 [29:20<3:47:18, 43.99s/it] 12%|█▏        | 41/350 [30:06<3:48:45, 44.42s/it] 12%|█▏        | 42/350 [30:57<3:58:52, 46.54s/it] 12%|█▏        | 43/350 [31:40<3:53:03, 45.55s/it] 13%|█▎        | 44/350 [32:25<3:50:23, 45.17s/it] 13%|█▎        | 45/350 [33:09<3:48:22, 44.93s/it] 13%|█▎        | 45/350 [33:57<3:50:06, 45.27s/it]
Traceback (most recent call last):
  File "/home/zhiyu2/guangliang/SuperficialMoralSelfCorrection/mechanism/internalmech.py", line 267, in <module>
    results = parsing_intrinsic_feedback_CoT(args, tokenizer, llm, file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/guangliang/SuperficialMoralSelfCorrection/mechanism/internalmech.py", line 188, in parsing_intrinsic_feedback_CoT
    internal_states_query = copy.deepcopy(hidden_states)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/copy.py", line 146, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/copy.py", line 153, in deepcopy
    y = copier(memo)
        ^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/_tensor.py", line 123, in __deepcopy__
    new_storage = self._typed_storage()._deepcopy(memo)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/storage.py", line 908, in _deepcopy
    return self._new_wrapped_storage(copy.deepcopy(self._untyped_storage, memo))
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/copy.py", line 153, in deepcopy
    y = copier(memo)
        ^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/storage.py", line 144, in __deepcopy__
    new_storage = self.clone()
                  ^^^^^^^^^^^^
  File "/home/zhiyu2/miniconda3/envs/zimo/lib/python3.11/site-packages/torch/storage.py", line 158, in clone
    return type(self)(self.nbytes(), device=self.device).copy_(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 42.00 MiB. GPU 0 has a total capacity of 44.55 GiB of which 21.44 MiB is free. Process 1159257 has 8.83 GiB memory in use. Including non-PyTorch memory, this process has 35.69 GiB memory in use. Of the allocated memory 34.42 GiB is allocated by PyTorch, and 984.68 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
Using device: cuda
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:00<00:01,  1.21it/s]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:01<00:00,  1.23it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:02<00:00,  1.29it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:02<00:00,  1.27it/s]
  0%|          | 0/432 [00:00<?, ?it/s]We detected that you are passing `past_key_values` as a tuple and this is deprecated and will be removed in v4.43. Please use an appropriate `Cache` class (https://huggingface.co/docs/transformers/v4.41.3/en/internal/generation_utils#transformers.Cache)
  0%|          | 1/432 [00:41<4:59:19, 41.67s/it]  0%|          | 2/432 [01:21<4:50:16, 40.50s/it]  1%|          | 3/432 [02:08<5:10:09, 43.38s/it]  1%|          | 4/432 [02:42<4:44:59, 39.95s/it]  1%|          | 5/432 [03:19<4:34:53, 38.63s/it]  1%|▏         | 6/432 [03:55<4:28:20, 37.79s/it]  2%|▏         | 7/432 [04:35<4:33:41, 38.64s/it]  2%|▏         | 8/432 [05:16<4:38:52, 39.46s/it]  2%|▏         | 9/432 [05:54<4:34:56, 39.00s/it]  2%|▏         | 10/432 [06:40<4:47:35, 40.89s/it]  3%|▎         | 11/432 [07:22<4:49:26, 41.25s/it]  3%|▎         | 12/432 [08:08<5:00:14, 42.89s/it]  3%|▎         | 13/432 [08:49<4:54:14, 42.14s/it]  3%|▎         | 14/432 [09:22<4:34:16, 39.37s/it]  3%|▎         | 15/432 [10:00<4:31:14, 39.03s/it]  4%|▎         | 16/432 [10:35<4:21:48, 37.76s/it]  4%|▍         | 17/432 [11:16<4:28:35, 38.83s/it]  4%|▍         | 18/432 [11:57<4:33:13, 39.60s/it]  4%|▍         | 19/432 [12:29<4:16:54, 37.32s/it]  5%|▍         | 20/432 [13:09<4:21:01, 38.01s/it]  5%|▍         | 21/432 [13:54<4:35:18, 40.19s/it]  5%|▌         | 22/432 [14:32<4:28:42, 39.32s/it]  5%|▌         | 23/432 [15:18<4:43:15, 41.55s/it]  6%|▌         | 24/432 [15:50<4:21:38, 38.48s/it]  6%|▌         | 25/432 [16:29<4:23:20, 38.82s/it]  6%|▌         | 26/432 [17:10<4:27:26, 39.52s/it]  6%|▋         | 27/432 [17:54<4:35:49, 40.86s/it]  6%|▋         | 28/432 [18:36<4:36:11, 41.02s/it]  7%|▋         | 29/432 [19:13<4:27:19, 39.80s/it]  7%|▋         | 30/432 [19:59<4:40:22, 41.85s/it]  7%|▋         | 31/432 [20:45<4:46:29, 42.87s/it]  7%|▋         | 32/432 [21:25<4:40:43, 42.11s/it]  8%|▊         | 33/432 [22:13<4:52:05, 43.92s/it]  8%|▊         | 34/432 [22:43<4:23:54, 39.79s/it]  8%|▊         | 35/432 [23:28<4:33:49, 41.38s/it]  8%|▊         | 36/432 [24:12<4:38:16, 42.16s/it]  9%|▊         | 37/432 [24:59<4:45:48, 43.41s/it]  9%|▉         | 38/432 [25:44<4:48:13, 43.89s/it]  9%|▉         | 39/432 [26:22<4:37:03, 42.30s/it]  9%|▉         | 40/432 [27:06<4:38:23, 42.61s/it]  9%|▉         | 41/432 [27:52<4:45:15, 43.77s/it] 10%|▉         | 42/432 [28:35<4:42:58, 43.53s/it] 10%|▉         | 43/432 [29:17<4:40:01, 43.19s/it] 10%|█         | 44/432 [29:56<4:30:55, 41.90s/it] 10%|█         | 45/432 [30:44<4:40:58, 43.56s/it] 11%|█         | 46/432 [31:29<4:42:44, 43.95s/it] 11%|█         | 47/432 [32:16<4:47:46, 44.85s/it] 11%|█         | 48/432 [32:45<4:18:01, 40.32s/it] 11%|█▏        | 49/432 [33:36<4:37:03, 43.40s/it] 12%|█▏        | 50/432 [34:18<4:34:19, 43.09s/it] 12%|█▏        | 51/432 [35:02<4:34:34, 43.24s/it] 12%|█▏        | 52/432 [35:51<4:45:05, 45.01s/it] 12%|█▏        | 53/432 [36:29<4:31:01, 42.91s/it] 12%|█▎        | 54/432 [37:14<4:34:58, 43.65s/it] 13%|█▎        | 55/432 [37:59<4:36:43, 44.04s/it] 13%|█▎        | 56/432 [38:46<4:41:02, 44.85s/it] 13%|█▎        | 57/432 [39:25<4:30:06, 43.22s/it] 13%|█▎        | 58/432 [40:14<4:39:02, 44.77s/it] 14%|█▎        | 59/432 [40:58<4:36:32, 44.48s/it] 14%|█▍        | 60/432 [41:45<4:41:56, 45.47s/it] 14%|█▍        | 61/432 [42:27<4:34:46, 44.44s/it] 14%|█▍        | 62/432 [43:08<4:26:37, 43.24s/it] 15%|█▍        | 63/432 [43:57<4:35:46, 44.84s/it] 15%|█▍        | 64/432 [44:44<4:39:33, 45.58s/it] 15%|█▌        | 65/432 [45:24<4:28:40, 43.92s/it] 15%|█▌        | 66/432 [46:08<4:29:12, 44.13s/it] 16%|█▌        | 67/432 [46:49<4:22:44, 43.19s/it] 16%|█▌        | 68/432 [47:37<4:29:03, 44.35s/it] 16%|█▌        | 69/432 [48:21<4:28:33, 44.39s/it] 16%|█▌        | 70/432 [49:08<4:31:57, 45.07s/it] 16%|█▋        | 71/432 [49:46<4:18:57, 43.04s/it] 17%|█▋        | 72/432 [50:31<4:22:07, 43.69s/it] 17%|█▋        | 73/432 [51:15<4:21:00, 43.62s/it] 17%|█▋        | 74/432 [52:01<4:24:49, 44.39s/it] 17%|█▋        | 75/432 [52:46<4:24:57, 44.53s/it] 18%|█▊        | 76/432 [53:26<4:17:02, 43.32s/it] 18%|█▊        | 77/432 [54:11<4:18:08, 43.63s/it] 18%|█▊        | 78/432 [54:57<4:22:03, 44.42s/it] 18%|█▊        | 79/432 [55:41<4:21:10, 44.39s/it] 19%|█▊        | 80/432 [56:20<4:10:17, 42.66s/it] 19%|█▉        | 81/432 [56:58<4:01:14, 41.24s/it] 19%|█▉        | 82/432 [57:42<4:05:58, 42.17s/it] 19%|█▉        | 83/432 [58:22<4:00:36, 41.37s/it] 19%|█▉        | 84/432 [58:58<3:50:34, 39.75s/it] 20%|█▉        | 85/432 [59:36<3:47:11, 39.28s/it] 20%|█▉        | 86/432 [1:00:11<3:40:27, 38.23s/it] 20%|██        | 87/432 [1:00:51<3:41:14, 38.48s/it] 20%|██        | 88/432 [1:01:34<3:49:07, 39.96s/it] 21%|██        | 89/432 [1:02:14<3:48:48, 40.02s/it] 21%|██        | 90/432 [1:02:52<3:44:37, 39.41s/it] 21%|██        | 91/432 [1:03:24<3:30:47, 37.09s/it] 21%|██▏       | 92/432 [1:04:02<3:31:34, 37.34s/it] 22%|██▏       | 93/432 [1:04:43<3:38:03, 38.59s/it] 22%|██▏       | 94/432 [1:05:18<3:30:48, 37.42s/it] 22%|██▏       | 95/432 [1:06:02<3:41:09, 39.38s/it] 22%|██▏       | 96/432 [1:06:31<3:23:13, 36.29s/it] 22%|██▏       | 97/432 [1:07:07<3:22:08, 36.20s/it] 23%|██▎       | 98/432 [1:07:43<3:21:46, 36.25s/it] 23%|██▎       | 99/432 [1:08:22<3:25:42, 37.06s/it] 23%|██▎       | 100/432 [1:09:08<3:39:03, 39.59s/it] 23%|██▎       | 101/432 [1:09:50<3:42:36, 40.35s/it] 24%|██▎       | 102/432 [1:10:36<3:51:27, 42.08s/it] 24%|██▍       | 103/432 [1:11:17<3:48:14, 41.62s/it] 24%|██▍       | 104/432 [1:11:56<3:44:45, 41.11s/it] 24%|██▍       | 105/432 [1:12:39<3:45:38, 41.40s/it] 25%|██▍       | 106/432 [1:13:19<3:43:17, 41.10s/it] 25%|██▍       | 107/432 [1:13:56<3:35:29, 39.78s/it] 25%|██▌       | 108/432 [1:14:38<3:38:53, 40.53s/it] 25%|██▌       | 109/432 [1:15:09<3:22:09, 37.55s/it] 25%|██▌       | 110/432 [1:15:51<3:29:21, 39.01s/it] 26%|██▌       | 111/432 [1:16:31<3:31:13, 39.48s/it] 26%|██▌       | 112/432 [1:17:17<3:39:57, 41.24s/it] 26%|██▌       | 113/432 [1:18:02<3:45:30, 42.42s/it] 26%|██▋       | 114/432 [1:18:34<3:28:17, 39.30s/it] 27%|██▋       | 115/432 [1:19:18<3:35:30, 40.79s/it] 27%|██▋       | 116/432 [1:20:03<3:41:46, 42.11s/it] 27%|██▋       | 117/432 [1:20:46<3:41:08, 42.12s/it] 27%|██▋       | 118/432 [1:21:29<3:42:50, 42.58s/it] 28%|██▊       | 119/432 [1:22:08<3:35:26, 41.30s/it] 28%|██▊       | 120/432 [1:22:51<3:37:15, 41.78s/it] 28%|██▊       | 121/432 [1:23:30<3:33:23, 41.17s/it] 28%|██▊       | 122/432 [1:24:18<3:42:16, 43.02s/it] 28%|██▊       | 123/432 [1:25:01<3:41:56, 43.09s/it] 29%|██▊       | 124/432 [1:25:32<3:22:28, 39.44s/it] 29%|██▉       | 125/432 [1:26:18<3:32:47, 41.59s/it] 29%|██▉       | 126/432 [1:26:52<3:19:23, 39.10s/it] 29%|██▉       | 127/432 [1:27:32<3:21:15, 39.59s/it] 30%|██▉       | 128/432 [1:28:12<3:20:26, 39.56s/it] 30%|██▉       | 129/432 [1:28:48<3:14:22, 38.49s/it] 30%|███       | 130/432 [1:29:30<3:18:56, 39.52s/it] 30%|███       | 131/432 [1:30:17<3:30:22, 41.94s/it] 31%|███       | 132/432 [1:30:56<3:25:08, 41.03s/it] 31%|███       | 133/432 [1:31:36<3:22:18, 40.60s/it] 31%|███       | 134/432 [1:32:09<3:10:54, 38.44s/it] 31%|███▏      | 135/432 [1:32:50<3:13:11, 39.03s/it] 31%|███▏      | 136/432 [1:33:29<3:12:22, 38.99s/it] 32%|███▏      | 137/432 [1:34:10<3:15:33, 39.78s/it] 32%|███▏      | 138/432 [1:34:56<3:23:05, 41.45s/it] 32%|███▏      | 139/432 [1:35:35<3:19:55, 40.94s/it] 32%|███▏      | 140/432 [1:36:23<3:29:48, 43.11s/it] 33%|███▎      | 141/432 [1:37:10<3:34:10, 44.16s/it] 33%|███▎      | 142/432 [1:37:56<3:35:19, 44.55s/it] 33%|███▎      | 143/432 [1:38:38<3:31:27, 43.90s/it] 33%|███▎      | 144/432 [1:39:20<3:27:27, 43.22s/it] 34%|███▎      | 145/432 [1:40:05<3:29:28, 43.79s/it] 34%|███▍      | 146/432 [1:40:51<3:31:46, 44.43s/it] 34%|███▍      | 147/432 [1:41:31<3:25:59, 43.37s/it] 34%|███▍      | 148/432 [1:42:11<3:19:28, 42.14s/it] 34%|███▍      | 149/432 [1:42:48<3:12:22, 40.79s/it] 35%|███▍      | 150/432 [1:43:34<3:17:48, 42.09s/it] 35%|███▍      | 151/432 [1:44:15<3:15:55, 41.83s/it] 35%|███▌      | 152/432 [1:45:02<3:22:22, 43.37s/it] 35%|███▌      | 153/432 [1:45:35<3:06:53, 40.19s/it] 36%|███▌      | 154/432 [1:46:12<3:02:14, 39.33s/it] 36%|███▌      | 155/432 [1:46:51<3:01:36, 39.34s/it] 36%|███▌      | 156/432 [1:47:35<3:07:36, 40.79s/it] 36%|███▋      | 157/432 [1:48:09<2:57:36, 38.75s/it] 37%|███▋      | 158/432 [1:48:43<2:49:40, 37.15s/it] 37%|███▋      | 159/432 [1:49:18<2:45:44, 36.43s/it] 37%|███▋      | 160/432 [1:50:00<2:52:53, 38.14s/it] 37%|███▋      | 161/432 [1:50:40<2:55:27, 38.85s/it] 38%|███▊      | 162/432 [1:51:26<3:03:48, 40.84s/it] 38%|███▊      | 163/432 [1:52:00<2:54:08, 38.84s/it] 38%|███▊      | 164/432 [1:52:40<2:55:42, 39.34s/it] 38%|███▊      | 165/432 [1:53:27<3:05:23, 41.66s/it] 38%|███▊      | 166/432 [1:54:14<3:10:54, 43.06s/it] 39%|███▊      | 167/432 [1:55:00<3:14:32, 44.05s/it] 39%|███▉      | 168/432 [1:55:36<3:03:02, 41.60s/it] 39%|███▉      | 169/432 [1:56:21<3:06:53, 42.64s/it] 39%|███▉      | 170/432 [1:57:00<3:01:10, 41.49s/it] 40%|███▉      | 171/432 [1:57:42<3:01:14, 41.67s/it] 40%|███▉      | 172/432 [1:58:22<2:58:06, 41.10s/it] 40%|████      | 173/432 [1:59:02<2:56:49, 40.96s/it] 40%|████      | 174/432 [1:59:49<3:03:51, 42.76s/it] 41%|████      | 175/432 [2:00:28<2:58:25, 41.65s/it] 41%|████      | 176/432 [2:01:13<3:01:08, 42.45s/it] 41%|████      | 177/432 [2:01:54<2:59:08, 42.15s/it] 41%|████      | 178/432 [2:02:30<2:50:48, 40.35s/it] 41%|████▏     | 179/432 [2:03:10<2:48:52, 40.05s/it] 42%|████▏     | 180/432 [2:03:54<2:53:12, 41.24s/it] 42%|████▏     | 181/432 [2:04:26<2:40:58, 38.48s/it] 42%|████▏     | 182/432 [2:05:10<2:48:01, 40.33s/it] 42%|████▏     | 183/432 [2:05:44<2:39:17, 38.38s/it] 43%|████▎     | 184/432 [2:06:28<2:45:52, 40.13s/it] 43%|████▎     | 185/432 [2:07:14<2:52:07, 41.81s/it] 43%|████▎     | 186/432 [2:07:58<2:54:04, 42.46s/it] 43%|████▎     | 187/432 [2:08:38<2:50:37, 41.78s/it] 44%|████▎     | 188/432 [2:09:15<2:43:50, 40.29s/it] 44%|████▍     | 189/432 [2:10:00<2:49:10, 41.77s/it] 44%|████▍     | 190/432 [2:10:50<2:58:36, 44.28s/it] 44%|████▍     | 191/432 [2:11:30<2:52:20, 42.91s/it] 44%|████▍     | 192/432 [2:12:13<2:51:39, 42.91s/it] 45%|████▍     | 193/432 [2:12:49<2:43:03, 40.93s/it] 45%|████▍     | 194/432 [2:13:36<2:48:35, 42.50s/it] 45%|████▌     | 195/432 [2:14:20<2:50:21, 43.13s/it] 45%|████▌     | 196/432 [2:15:00<2:45:39, 42.12s/it] 46%|████▌     | 197/432 [2:15:36<2:37:28, 40.21s/it] 46%|████▌     | 198/432 [2:16:12<2:32:11, 39.02s/it] 46%|████▌     | 199/432 [2:16:57<2:38:22, 40.79s/it] 46%|████▋     | 200/432 [2:17:39<2:39:45, 41.32s/it] 47%|████▋     | 201/432 [2:18:19<2:36:55, 40.76s/it] 47%|████▋     | 202/432 [2:18:58<2:34:25, 40.29s/it] 47%|████▋     | 203/432 [2:19:39<2:34:32, 40.49s/it] 47%|████▋     | 204/432 [2:20:22<2:36:32, 41.19s/it] 47%|████▋     | 205/432 [2:21:00<2:32:49, 40.39s/it] 48%|████▊     | 206/432 [2:21:45<2:36:58, 41.67s/it] 48%|████▊     | 207/432 [2:22:30<2:40:25, 42.78s/it] 48%|████▊     | 208/432 [2:23:18<2:45:26, 44.31s/it] 48%|████▊     | 209/432 [2:24:02<2:44:00, 44.13s/it] 49%|████▊     | 210/432 [2:24:40<2:36:21, 42.26s/it] 49%|████▉     | 211/432 [2:25:23<2:36:27, 42.48s/it] 49%|████▉     | 212/432 [2:26:02<2:32:18, 41.54s/it] 49%|████▉     | 213/432 [2:26:42<2:29:40, 41.01s/it] 50%|████▉     | 214/432 [2:27:23<2:29:32, 41.16s/it] 50%|████▉     | 215/432 [2:27:54<2:17:16, 37.96s/it] 50%|█████     | 216/432 [2:28:34<2:19:22, 38.71s/it] 50%|█████     | 217/432 [2:29:22<2:28:17, 41.38s/it] 50%|█████     | 218/432 [2:30:09<2:33:26, 43.02s/it] 51%|█████     | 219/432 [2:30:50<2:30:26, 42.38s/it] 51%|█████     | 220/432 [2:31:27<2:23:59, 40.75s/it] 51%|█████     | 221/432 [2:32:07<2:22:44, 40.59s/it] 51%|█████▏    | 222/432 [2:32:50<2:25:12, 41.49s/it] 52%|█████▏    | 223/432 [2:33:33<2:25:46, 41.85s/it] 52%|█████▏    | 224/432 [2:34:11<2:21:17, 40.76s/it] 52%|█████▏    | 225/432 [2:34:47<2:15:02, 39.14s/it] 52%|█████▏    | 226/432 [2:35:27<2:15:53, 39.58s/it] 53%|█████▎    | 227/432 [2:36:11<2:19:12, 40.74s/it] 53%|█████▎    | 228/432 [2:36:54<2:20:57, 41.46s/it] 53%|█████▎    | 229/432 [2:37:35<2:19:35, 41.26s/it] 53%|█████▎    | 230/432 [2:38:09<2:11:46, 39.14s/it] 53%|█████▎    | 231/432 [2:38:43<2:06:30, 37.77s/it] 54%|█████▎    | 232/432 [2:39:26<2:10:57, 39.29s/it] 54%|█████▍    | 233/432 [2:40:07<2:11:34, 39.67s/it] 54%|█████▍    | 234/432 [2:40:52<2:16:01, 41.22s/it] 54%|█████▍    | 235/432 [2:41:27<2:09:07, 39.33s/it] 55%|█████▍    | 236/432 [2:42:10<2:12:52, 40.68s/it] 55%|█████▍    | 237/432 [2:42:57<2:18:16, 42.55s/it] 55%|█████▌    | 238/432 [2:43:43<2:20:53, 43.57s/it] 55%|█████▌    | 239/432 [2:44:25<2:17:52, 42.86s/it] 56%|█████▌    | 240/432 [2:45:03<2:12:55, 41.54s/it] 56%|█████▌    | 241/432 [2:45:51<2:18:34, 43.53s/it] 56%|█████▌    | 242/432 [2:46:29<2:12:13, 41.76s/it] 56%|█████▋    | 243/432 [2:47:15<2:15:16, 42.94s/it] 56%|█████▋    | 244/432 [2:47:50<2:07:52, 40.81s/it] 57%|█████▋    | 245/432 [2:48:35<2:11:04, 42.06s/it] 57%|█████▋    | 246/432 [2:49:19<2:11:41, 42.48s/it] 57%|█████▋    | 247/432 [2:50:04<2:13:34, 43.32s/it] 57%|█████▋    | 248/432 [2:50:46<2:11:31, 42.89s/it] 58%|█████▊    | 249/432 [2:51:26<2:07:59, 41.97s/it] 58%|█████▊    | 250/432 [2:52:09<2:08:25, 42.34s/it] 58%|█████▊    | 251/432 [2:52:57<2:12:34, 43.95s/it] 58%|█████▊    | 252/432 [2:53:39<2:10:44, 43.58s/it] 59%|█████▊    | 253/432 [2:54:23<2:09:38, 43.46s/it] 59%|█████▉    | 254/432 [2:55:02<2:05:09, 42.19s/it] 59%|█████▉    | 255/432 [2:55:45<2:05:27, 42.53s/it] 59%|█████▉    | 256/432 [2:56:26<2:03:35, 42.13s/it] 59%|█████▉    | 257/432 [2:57:10<2:04:27, 42.67s/it] 60%|█████▉    | 258/432 [2:57:54<2:04:50, 43.05s/it] 60%|█████▉    | 259/432 [2:58:38<2:04:40, 43.24s/it] 60%|██████    | 260/432 [2:59:18<2:01:29, 42.38s/it] 60%|██████    | 261/432 [3:00:07<2:05:54, 44.18s/it] 61%|██████    | 262/432 [3:00:48<2:02:57, 43.40s/it] 61%|██████    | 263/432 [3:01:29<1:59:40, 42.49s/it] 61%|██████    | 264/432 [3:02:14<2:01:05, 43.24s/it] 61%|██████▏   | 265/432 [3:03:00<2:02:46, 44.11s/it] 62%|██████▏   | 266/432 [3:03:35<1:54:49, 41.50s/it] 62%|██████▏   | 267/432 [3:04:21<1:57:54, 42.88s/it] 62%|██████▏   | 268/432 [3:04:57<1:51:47, 40.90s/it] 62%|██████▏   | 269/432 [3:05:45<1:56:18, 42.81s/it] 62%|██████▎   | 270/432 [3:06:23<1:52:05, 41.51s/it] 63%|██████▎   | 271/432 [3:07:11<1:56:35, 43.45s/it] 63%|██████▎   | 272/432 [3:07:54<1:54:57, 43.11s/it] 63%|██████▎   | 273/432 [3:08:30<1:49:20, 41.26s/it] 63%|██████▎   | 274/432 [3:09:19<1:54:07, 43.34s/it] 64%|██████▎   | 275/432 [3:10:04<1:55:09, 44.01s/it] 64%|██████▍   | 276/432 [3:10:46<1:52:56, 43.44s/it] 64%|██████▍   | 277/432 [3:11:25<1:48:14, 41.90s/it] 64%|██████▍   | 278/432 [3:12:00<1:42:11, 39.82s/it] 65%|██████▍   | 279/432 [3:12:43<1:44:04, 40.82s/it] 65%|██████▍   | 280/432 [3:13:27<1:46:16, 41.95s/it] 65%|██████▌   | 281/432 [3:14:12<1:47:41, 42.79s/it] 65%|██████▌   | 282/432 [3:14:48<1:41:31, 40.61s/it] 66%|██████▌   | 283/432 [3:15:32<1:43:43, 41.77s/it] 66%|██████▌   | 284/432 [3:16:14<1:43:19, 41.89s/it] 66%|██████▌   | 285/432 [3:16:59<1:44:35, 42.69s/it] 66%|██████▌   | 286/432 [3:17:45<1:46:11, 43.64s/it] 66%|██████▋   | 287/432 [3:18:19<1:38:32, 40.77s/it] 67%|██████▋   | 288/432 [3:19:06<1:42:49, 42.84s/it] 67%|██████▋   | 289/432 [3:19:51<1:43:39, 43.49s/it] 67%|██████▋   | 290/432 [3:20:36<1:43:59, 43.94s/it] 67%|██████▋   | 291/432 [3:21:18<1:41:29, 43.19s/it] 68%|██████▊   | 292/432 [3:21:54<1:35:34, 40.96s/it] 68%|██████▊   | 293/432 [3:22:39<1:38:00, 42.30s/it] 68%|██████▊   | 294/432 [3:23:24<1:39:01, 43.06s/it] 68%|██████▊   | 295/432 [3:24:04<1:36:22, 42.21s/it] 69%|██████▊   | 296/432 [3:24:47<1:36:26, 42.55s/it] 69%|██████▉   | 297/432 [3:25:25<1:32:28, 41.10s/it] 69%|██████▉   | 298/432 [3:26:08<1:33:01, 41.65s/it] 69%|██████▉   | 299/432 [3:26:52<1:34:01, 42.42s/it] 69%|██████▉   | 300/432 [3:27:35<1:33:17, 42.40s/it] 70%|██████▉   | 301/432 [3:28:16<1:31:59, 42.13s/it] 70%|██████▉   | 302/432 [3:29:01<1:32:58, 42.91s/it] 70%|███████   | 303/432 [3:29:42<1:31:03, 42.36s/it] 70%|███████   | 304/432 [3:30:22<1:28:58, 41.71s/it] 71%|███████   | 305/432 [3:31:07<1:30:17, 42.66s/it] 71%|███████   | 306/432 [3:31:55<1:33:12, 44.39s/it] 71%|███████   | 307/432 [3:32:42<1:33:43, 44.99s/it] 71%|███████▏  | 308/432 [3:33:27<1:32:55, 44.96s/it] 72%|███████▏  | 309/432 [3:34:05<1:28:06, 42.98s/it] 72%|███████▏  | 310/432 [3:34:51<1:28:55, 43.74s/it] 72%|███████▏  | 311/432 [3:35:34<1:28:16, 43.77s/it] 72%|███████▏  | 312/432 [3:36:19<1:28:05, 44.04s/it] 72%|███████▏  | 313/432 [3:36:58<1:24:23, 42.55s/it] 73%|███████▎  | 314/432 [3:37:46<1:26:42, 44.09s/it] 73%|███████▎  | 315/432 [3:38:29<1:25:40, 43.94s/it] 73%|███████▎  | 316/432 [3:39:11<1:23:28, 43.17s/it] 73%|███████▎  | 317/432 [3:39:58<1:25:16, 44.49s/it] 74%|███████▎  | 318/432 [3:40:42<1:24:02, 44.24s/it] 74%|███████▍  | 319/432 [3:41:28<1:24:13, 44.72s/it] 74%|███████▍  | 320/432 [3:42:15<1:24:38, 45.35s/it] 74%|███████▍  | 321/432 [3:43:01<1:24:34, 45.72s/it] 75%|███████▍  | 322/432 [3:43:42<1:21:03, 44.21s/it] 75%|███████▍  | 323/432 [3:44:28<1:21:06, 44.65s/it] 75%|███████▌  | 324/432 [3:45:16<1:22:07, 45.63s/it] 75%|███████▌  | 325/432 [3:45:56<1:18:43, 44.15s/it] 75%|███████▌  | 326/432 [3:46:40<1:17:38, 43.95s/it] 76%|███████▌  | 327/432 [3:47:18<1:13:43, 42.13s/it] 76%|███████▌  | 328/432 [3:48:06<1:16:23, 44.07s/it] 76%|███████▌  | 329/432 [3:48:54<1:17:34, 45.19s/it] 76%|███████▋  | 330/432 [3:49:41<1:17:35, 45.64s/it] 77%|███████▋  | 331/432 [3:50:23<1:15:20, 44.76s/it] 77%|███████▋  | 332/432 [3:51:05<1:12:57, 43.77s/it] 77%|███████▋  | 333/432 [3:51:51<1:13:27, 44.53s/it] 77%|███████▋  | 334/432 [3:52:38<1:14:01, 45.32s/it] 78%|███████▊  | 335/432 [3:53:24<1:13:31, 45.48s/it] 78%|███████▊  | 336/432 [3:54:04<1:10:13, 43.89s/it] 78%|███████▊  | 337/432 [3:54:46<1:08:11, 43.07s/it] 78%|███████▊  | 338/432 [3:55:26<1:06:07, 42.21s/it] 78%|███████▊  | 339/432 [3:56:08<1:05:14, 42.09s/it] 79%|███████▊  | 340/432 [3:56:50<1:04:35, 42.13s/it] 79%|███████▉  | 341/432 [3:57:26<1:00:58, 40.20s/it] 79%|███████▉  | 342/432 [3:58:07<1:00:43, 40.49s/it] 79%|███████▉  | 343/432 [3:58:52<1:02:22, 42.05s/it] 80%|███████▉  | 344/432 [3:59:31<1:00:21, 41.16s/it] 80%|███████▉  | 345/432 [4:00:15<1:00:37, 41.81s/it] 80%|████████  | 346/432 [4:00:48<56:17, 39.27s/it]   80%|████████  | 347/432 [4:01:28<55:54, 39.46s/it] 81%|████████  | 348/432 [4:02:08<55:29, 39.64s/it] 81%|████████  | 349/432 [4:02:52<56:27, 40.81s/it] 81%|████████  | 350/432 [4:03:31<55:19, 40.48s/it] 81%|████████▏ | 351/432 [4:04:07<52:40, 39.01s/it] 81%|████████▏ | 352/432 [4:04:49<53:07, 39.85s/it] 82%|████████▏ | 353/432 [4:05:33<54:20, 41.28s/it] 82%|████████▏ | 354/432 [4:06:16<54:19, 41.78s/it] 82%|████████▏ | 355/432 [4:06:59<53:49, 41.94s/it] 82%|████████▏ | 356/432 [4:07:30<49:04, 38.75s/it] 83%|████████▎ | 357/432 [4:08:13<50:10, 40.14s/it] 83%|████████▎ | 358/432 [4:08:54<49:38, 40.25s/it] 83%|████████▎ | 359/432 [4:09:36<49:34, 40.74s/it] 83%|████████▎ | 360/432 [4:10:15<48:31, 40.43s/it] 84%|████████▎ | 361/432 [4:10:55<47:34, 40.20s/it] 84%|████████▍ | 362/432 [4:11:39<48:13, 41.34s/it] 84%|████████▍ | 363/432 [4:12:26<49:37, 43.15s/it] 84%|████████▍ | 364/432 [4:13:05<47:27, 41.88s/it] 84%|████████▍ | 365/432 [4:13:52<48:17, 43.25s/it] 85%|████████▍ | 366/432 [4:14:31<46:19, 42.12s/it] 85%|████████▍ | 367/432 [4:15:17<46:56, 43.33s/it] 85%|████████▌ | 368/432 [4:16:03<47:02, 44.11s/it] 85%|████████▌ | 369/432 [4:16:50<47:14, 44.99s/it] 86%|████████▌ | 370/432 [4:17:32<45:18, 43.85s/it] 86%|████████▌ | 371/432 [4:18:21<46:20, 45.58s/it] 86%|████████▌ | 372/432 [4:19:10<46:31, 46.52s/it] 86%|████████▋ | 373/432 [4:19:55<45:24, 46.18s/it] 87%|████████▋ | 374/432 [4:20:40<44:07, 45.64s/it] 87%|████████▋ | 375/432 [4:21:22<42:21, 44.60s/it] 87%|████████▋ | 376/432 [4:22:04<40:50, 43.75s/it] 87%|████████▋ | 377/432 [4:22:48<40:12, 43.86s/it] 88%|████████▊ | 378/432 [4:23:36<40:39, 45.17s/it] 88%|████████▊ | 379/432 [4:24:14<38:00, 43.04s/it] 88%|████████▊ | 380/432 [4:25:00<38:10, 44.04s/it] 88%|████████▊ | 381/432 [4:25:48<38:15, 45.02s/it] 88%|████████▊ | 382/432 [4:26:29<36:36, 43.92s/it] 89%|████████▊ | 383/432 [4:27:19<37:13, 45.59s/it] 89%|████████▉ | 384/432 [4:27:58<35:06, 43.89s/it] 89%|████████▉ | 385/432 [4:28:47<35:29, 45.30s/it] 89%|████████▉ | 386/432 [4:29:33<34:52, 45.48s/it] 90%|████████▉ | 387/432 [4:30:20<34:28, 45.96s/it] 90%|████████▉ | 388/432 [4:31:01<32:32, 44.37s/it] 90%|█████████ | 389/432 [4:31:44<31:35, 44.09s/it] 90%|█████████ | 390/432 [4:32:31<31:27, 44.93s/it] 91%|█████████ | 391/432 [4:33:19<31:17, 45.79s/it] 91%|█████████ | 392/432 [4:33:59<29:27, 44.20s/it] 91%|█████████ | 393/432 [4:34:33<26:43, 41.12s/it] 91%|█████████ | 394/432 [4:35:16<26:26, 41.74s/it] 91%|█████████▏| 395/432 [4:36:04<26:45, 43.38s/it] 92%|█████████▏| 396/432 [4:36:47<25:59, 43.33s/it] 92%|█████████▏| 397/432 [4:37:32<25:36, 43.90s/it] 92%|█████████▏| 398/432 [4:38:22<25:52, 45.66s/it] 92%|█████████▏| 399/432 [4:39:12<25:47, 46.90s/it] 93%|█████████▎| 400/432 [4:39:53<24:07, 45.23s/it] 93%|█████████▎| 401/432 [4:40:32<22:25, 43.40s/it] 93%|█████████▎| 402/432 [4:41:13<21:18, 42.63s/it] 93%|█████████▎| 403/432 [4:41:52<20:03, 41.50s/it] 94%|█████████▎| 404/432 [4:42:30<18:51, 40.42s/it] 94%|█████████▍| 405/432 [4:43:03<17:16, 38.38s/it] 94%|█████████▍| 406/432 [4:43:43<16:48, 38.79s/it] 94%|█████████▍| 407/432 [4:44:21<15:59, 38.38s/it] 94%|█████████▍| 408/432 [4:45:02<15:40, 39.19s/it] 95%|█████████▍| 409/432 [4:45:46<15:34, 40.64s/it] 95%|█████████▍| 410/432 [4:46:24<14:40, 40.00s/it] 95%|█████████▌| 411/432 [4:47:09<14:33, 41.61s/it] 95%|█████████▌| 412/432 [4:47:50<13:46, 41.35s/it] 96%|█████████▌| 413/432 [4:48:34<13:21, 42.19s/it] 96%|█████████▌| 414/432 [4:49:18<12:45, 42.52s/it] 96%|█████████▌| 415/432 [4:49:56<11:43, 41.40s/it] 96%|█████████▋| 416/432 [4:50:33<10:41, 40.08s/it] 97%|█████████▋| 417/432 [4:51:15<10:06, 40.47s/it] 97%|█████████▋| 418/432 [4:51:50<09:03, 38.83s/it] 97%|█████████▋| 419/432 [4:52:28<08:24, 38.77s/it] 97%|█████████▋| 420/432 [4:53:02<07:26, 37.24s/it] 97%|█████████▋| 421/432 [4:53:43<07:01, 38.31s/it] 98%|█████████▊| 422/432 [4:54:21<06:22, 38.23s/it] 98%|█████████▊| 423/432 [4:55:05<05:58, 39.84s/it] 98%|█████████▊| 424/432 [4:55:50<05:31, 41.39s/it] 98%|█████████▊| 425/432 [4:56:21<04:29, 38.48s/it] 99%|█████████▊| 426/432 [4:56:53<03:38, 36.40s/it] 99%|█████████▉| 427/432 [4:57:30<03:03, 36.78s/it] 99%|█████████▉| 428/432 [4:58:13<02:34, 38.52s/it] 99%|█████████▉| 429/432 [4:58:55<01:58, 39.65s/it]100%|█████████▉| 430/432 [4:59:34<01:18, 39.20s/it]100%|█████████▉| 431/432 [5:00:11<00:38, 38.66s/it]100%|██████████| 432/432 [5:00:51<00:00, 39.17s/it]100%|██████████| 432/432 [5:00:51<00:00, 41.79s/it]
